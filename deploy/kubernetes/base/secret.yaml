apiVersion: v1
kind: Secret
metadata:
  name: k-ocr-secrets
  namespace: k-ocr
  labels:
    app.kubernetes.io/name: k-ocr-web-corrector
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Base64 encoded secrets - REPLACE WITH ACTUAL VALUES
  SECRET_KEY: eW91cl9zdXBlcl9zZWNyZXRfa2V5X2NoYW5nZV90aGlzX2luX3Byb2R1Y3Rpb24=  # your_super_secret_key_change_this_in_production
  POSTGRES_PASSWORD: c2VjdXJlX3Bhc3N3b3JkXzEyMw==  # secure_password_123
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmRfMTIz  # redis_password_123
  FLOWER_PASSWORD: Zmxvd2VyX3Bhc3N3b3JkXzEyMw==  # flower_password_123
  GRAFANA_PASSWORD: Z3JhZmFuYV9wYXNzd29yZF8xMjM=  # grafana_password_123

---
apiVersion: v1
kind: Secret
metadata:
  name: k-ocr-postgres-secret
  namespace: k-ocr
type: Opaque
data:
  POSTGRES_USER: a19vY3JfdXNlcg==  # k_ocr_user
  POSTGRES_PASSWORD: c2VjdXJlX3Bhc3N3b3JkXzEyMw==  # secure_password_123
  POSTGRES_DB: a19vY3I=  # k_ocr

---
# TLS Secret for HTTPS (if using cert-manager or manual certificates)
apiVersion: v1
kind: Secret
metadata:
  name: k-ocr-tls
  namespace: k-ocr
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTi...  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi...  # Base64 encoded private key