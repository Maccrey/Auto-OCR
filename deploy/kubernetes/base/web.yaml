apiVersion: v1
kind: Service
metadata:
  name: k-ocr-web
  namespace: k-ocr
  labels:
    app.kubernetes.io/name: k-ocr-web
    app.kubernetes.io/component: frontend
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app.kubernetes.io/name: k-ocr-web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k-ocr-web
  namespace: k-ocr
  labels:
    app.kubernetes.io/name: k-ocr-web
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: k-ocr-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k-ocr-web
        app.kubernetes.io/component: frontend
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: k-ocr-web
        image: k-ocr-web-corrector:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: k-ocr-secrets
              key: SECRET_KEY
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: k-ocr-secrets
              key: POSTGRES_PASSWORD
        envFrom:
        - configMapRef:
            name: k-ocr-config
        volumeMounts:
        - name: temp-storage
          mountPath: /app/temp_storage
        - name: app-logs
          mountPath: /app/logs
        - name: ocr-models
          mountPath: /app/models
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/download/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/download/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/download/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: temp-storage
        persistentVolumeClaim:
          claimName: k-ocr-temp-storage
      - name: app-logs
        persistentVolumeClaim:
          claimName: k-ocr-app-logs
      - name: ocr-models
        persistentVolumeClaim:
          claimName: k-ocr-ocr-models
      initContainers:
      - name: model-downloader
        image: k-ocr-web-corrector:latest
        command: ["python", "scripts/download_models.py"]
        env:
        - name: MODEL_CACHE_DIR
          value: "/app/models"
        volumeMounts:
        - name: ocr-models
          mountPath: /app/models
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"