apiVersion: v1
kind: ConfigMap
metadata:
  name: k-ocr-config
  namespace: k-ocr
  labels:
    app.kubernetes.io/name: k-ocr-web-corrector
    app.kubernetes.io/component: config
data:
  # Redis Configuration
  REDIS_URL: "redis://k-ocr-redis:6379/0"
  CELERY_BROKER_URL: "redis://k-ocr-redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://k-ocr-redis:6379/0"

  # Database Configuration
  DATABASE_URL: "postgresql://k_ocr_user:$(POSTGRES_PASSWORD)@k-ocr-postgres:5432/k_ocr"

  # Application Settings
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  MAX_FILE_SIZE: "50"
  MAX_CONCURRENT_UPLOADS: "10"

  # OCR Configuration
  DEFAULT_OCR_ENGINE: "paddle"
  PADDLE_USE_GPU: "false"
  PADDLE_LANG: "korean"

  # Security
  CORS_ORIGINS: "https://your-domain.com"
  ALLOWED_HOSTS: "your-domain.com,k-ocr-web"

  # Performance
  WORKERS: "4"
  CELERY_WORKER_CONCURRENCY: "4"

  # Paths
  TEMP_STORAGE_PATH: "/app/temp_storage"
  LOG_FILE_PATH: "/app/logs/app.log"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k-ocr-redis-config
  namespace: k-ocr
data:
  redis.conf: |
    # Redis Configuration for K-OCR
    bind 0.0.0.0
    port 6379
    protected-mode no
    timeout 300

    # Memory Management
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5

    # Persistence
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Logging
    loglevel notice

    # Client Management
    tcp-keepalive 300
    tcp-backlog 511

    # Performance
    hz 10
    dynamic-hz yes

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k-ocr-nginx-config
  namespace: k-ocr
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format json escape=json '{'
            '"timestamp": "$time_iso8601",'
            '"remote_addr": "$remote_addr",'
            '"request": "$request",'
            '"status": $status,'
            '"bytes_sent": $body_bytes_sent,'
            '"request_time": $request_time,'
            '"upstream_response_time": "$upstream_response_time",'
            '"user_agent": "$http_user_agent",'
            '"referrer": "$http_referer"'
        '}';

        access_log /var/log/nginx/access.log json;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        client_max_body_size 100M;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

        upstream k_ocr_web {
            server k-ocr-web:8000;
            keepalive 32;
        }

        server {
            listen 80;
            server_name _;

            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location /static/ {
                root /var/www;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            location /api/upload {
                proxy_pass http://k_ocr_web;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_request_buffering off;
                proxy_read_timeout 300;
                proxy_send_timeout 300;
            }

            location /api/ {
                proxy_pass http://k_ocr_web;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 120;
                proxy_send_timeout 120;
            }

            location / {
                proxy_pass http://k_ocr_web;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }